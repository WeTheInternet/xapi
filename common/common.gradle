buildscript({
    dependencies {
        classpath group: 'net.wti.gradle.tools', name: 'xapi-gradle-tools', version: version, changing: true
    }
})
plugins { id 'xapi-require' }

String v = version

// perform project-local alterations to our schema; 
// we don't make spi depend on api by default, since it's plausible to chose dependency in either direction
xapiSchema.archives.getByName('spi').require('api')
xapiSchema.archives.getByName('test').published = true

xapiRequire {
    main().external "net.wti.core:xapi-gen:$v", "main"
    module('api').external "net.wti.core:xapi-anno:$v", "main"
    module('api').external "net.wti.core:xapi-fu:$v", "main"
    module('test').external "net.wti.core:xapi-fu:$v", "main"
    module('jre', 'main').internal "xapi-util:main"
    module('jre', 'test').internal "xapi-core-parent:xapi-core-test:main:main"
    module('gwt', 'main').configure {
        req ->
            req.internal 'xapi-util:main'
            req.internal 'xapi-dev-parent:xapi-dev-source:main:main'
            req.internal 'xapi-core-parent:xapi-core-reflect:main:main'
            req.internal 'xapi-inject:main'
            req.external "net.wti.core:xapi-fu:$v", 'main'
            req.external 'com.google.elemental2:elemental2-core:1.0.0-RC1'
            req.external 'com.google.jsinterop:base:1.0.0-RC1'
            req.external 'javax.inject:javax.inject:1'
            req.external 'javax.inject:javax.inject:1:sources'
            req.external 'javax.validation:validation-api:1.0.0.GA'
            req.external 'javax.validation:validation-api:1.0.0.GA:sources'
    }
}

xapiSchema.whenReady {
    dependencies {
        // anything created by our schema currently requires waiting until the whole schema is ready.
        // when we use schema.xapi files, we may be able to selectively expose transient "configuration buckets" asap,
        // and defer creating anything else until the schema is ready.
        gwtCompileOnly 'net.wetheinter:gwt-dev:2.8.0'
        gwtCompileOnly 'net.wetheinter:gwt-user:2.8.0'
        apiAnnotationProcessor("net.wti.gradle:xapi-dev-mirror:$v") {
            ExternalModuleDependency dep ->
                // TODO: set this based on static analysis of schema.xapi files
    //            dep.targetConfiguration = 'exportCompile'
        }
    }

}

apply from: "$rootDir/gradle/processor.gradle"

dependencies {
    // TODO: make this implementation and then force alllll downstream users to add this as well.
    compile 'javax.inject:javax.inject:1'
    // alternatively, make it compile-transitive from xapi-inject, so at least it's obvious consumer wants @Inject

    compile 'javax.annotation:javax.annotation-api:1.2'
    testCompile 'junit:junit:4.12'
}
description = 'XApi - Core Interfaces and Abstractions'
