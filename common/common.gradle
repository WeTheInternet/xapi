import net.wti.gradle.schema.api.Transitivity

buildscript({
    dependencies {
        classpath group: 'net.wti.gradle.tools', name: 'xapi-gradle-tools', version: version, changing: true
    }
})
plugins { id 'xapi-require' }

String v = version

// dirty hack...  the gwt:testTools module is _not_ getting created properly.
// the nasty .baseOn() timing of xapiSchema resolution is to blame
xapiSchema.findPlatform('main').getArchive('testTools').published = true
xapiSchema.findPlatform('gwt').getArchive('testTools').published = true

xapiRequire {
    main().external "net.wti.core:xapi-gen:$v", "main"
    module('api').configure {
        req ->
            req.external "net.wti.core:xapi-anno:$v", "main"
            req.external "net.wti.core:xapi-fu:$v", "main"
    }
    module('spi').configure {
        req ->
            req.project ":base-api"
    }
    module('test').external "net.wti.core:xapi-fu:$v", "main"
    main('jre').project 'xapi-util', 'main'
    main('gwt').configure {
        req ->
            req.project 'xapi-util', 'main'
            req.project 'xapi-core-parent:xapi-core-reflect', 'main'
            req.project 'xapi-inject', 'main'
            req.external "net.wti.core:xapi-fu:$v", 'main'
            req.external 'com.google.elemental2:elemental2-core:1.0.0-RC1'
            req.external 'com.google.jsinterop:base:1.0.0-RC1'
            req.external 'javax.inject:javax.inject:1'
            req.external 'javax.inject:javax.inject:1:sources'
            req.external 'javax.validation:validation-api:1.0.0.GA'
            req.external 'javax.validation:validation-api:1.0.0.GA:sources'
    }
    module('gwt', 'test').configure {
        req ->
            req.external Transitivity.runtime_only, 'net.wetheinter:gwt-dev:2.8.0'
    }
    module('gwt', 'testTools').configure {
        req ->
            req.external 'junit:junit:4.12'
            req.external 'junit:junit:4.12:sources'
            req.external 'org.hamcrest:hamcrest-core:1.3'
            req.external 'org.hamcrest:hamcrest-core:1.3:sources'
            req.external 'net.sourceforge.htmlunit:htmlunit:2.19'
            req.project ':base-testTools'
            req.project 'xapi-elemental', 'main'
            req.external 'net.wetheinter:gwt-user:2.8.0'
            req.external 'net.wetheinter:gwt-elemental:2.8.0'
            req.project 'xapi-server-parent:xapi-server-api', 'main'
    }
}

xapiSchema.whenReady {
    dependencies {
        // anything created by our schema currently requires waiting until the whole schema is ready.
        // when we use schema.xapi files, we may be able to selectively expose transient "configuration buckets" asap,
        // and defer creating anything else until the schema is ready.
        gwtCompileOnly 'net.wetheinter:gwt-dev:2.8.0'
        gwtCompileOnly 'net.wetheinter:gwt-user:2.8.0'
//        apiAnnotationProcessor("net.wti.gradle:xapi-dev-mirror:$v") {
//            ExternalModuleDependency dep ->
//                // TODO: set this based on static analysis of schema.xapi files
//    //            dep.targetConfiguration = 'exportCompile'
//        }
        gwtTestToolsImplementation 'net.wetheinter:gwt-dev:2.8.0'
    }

}

apply from: "$rootDir/gradle/processor.gradle"
repositories.mavenCentral()
xapiSchema.whenReady {
    dependencies {
        transitive 'javax.inject:javax.inject:1'
        // alternatively, make it compile-transitive from xapi-inject, so at least it's obvious consumer wants @Inject
        transitive 'javax.annotation:javax.annotation-api:1.2'
    }
}
dependencies {
    testImplementation 'junit:junit:4.12'
}
description = 'XApi - Core Interfaces and Abstractions'
