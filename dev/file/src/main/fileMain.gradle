import org.gradle.api.tasks.SourceSet;

// GenStart net.wti.gradle.settings.plugin.XapiSettingsPlugin
ext.xapiModern = 'true'

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
    repositories {
        maven {
            name = 'xapiLocal'
            url = repo
        }
    }
}
plugins.apply 'java-library'
java.toolchain.languageVersion = JavaLanguageVersion.of(8)
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/dev/file/src/main/java")
main.resources.srcDir("$rootDir/dev/file/src/main/resources")
test.java.srcDir("$rootDir/dev/file/src/test/java")
test.resources.srcDir("$rootDir/dev/file/src/test/resources")

dependencies {
    implementation project(path: ":io-main")
    implementation project(path: ":inject-main")
    implementation project(path: ":util-main")
    testImplementation project(path: ":base-testTools")
    implementation project(path: ":io-main")
    implementation project(path: ":inject-main")
    implementation project(path: ":util-main")
    testImplementation project(path: ":base-testTools")
    implementation project(path: ":io-main")
    implementation project(path: ":inject-main")
    implementation project(path: ":util-main")
    testImplementation project(path: ":base-testTools")
}
// Setup publishing to coordinates(net.wetheinter): net.wetheinter:xapi-dev-file
// GenEnd net.wti.gradle.settings.plugin.XapiSettingsPlugin
// Done generating buildfile for :dev:file at file://$rootDir/dev/file/src/main/fileMain.gradle
