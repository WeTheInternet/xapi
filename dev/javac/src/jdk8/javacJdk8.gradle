import org.gradle.api.tasks.SourceSet;

plugins {
    // GenInclude plugin from file:///opt/xapi/dev/javac/src/gradle/jdk8/plugins
    id('xapi-tools-jar')
    id	"java-library"// GenInclude XapiSettingsPlugin adding java-library b/c api dependencies used
}

// GenStart XapiSettingsPlugin
ext.xapiModern = 'true'

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
    repositories {
        maven {
            name = 'xapiLocal'
            url = repo
        }
    }
}
plugins.apply 'java-library'
java.toolchain.languageVersion = JavaLanguageVersion.of(8)
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/dev/javac/src/jdk8/java")
main.resources.srcDir("$rootDir/dev/javac/src/jdk8/resources")
test.java.srcDir("$rootDir/dev/javac/src/jdk8Test/java")
test.resources.srcDir("$rootDir/dev/javac/src/jdk8Test/resources")

dependencies {
    implementation project(path: ":io-jre")
    implementation project(path: ":inject-jre")
    testImplementation project(path: ":base-testTools")
    testImplementation project(path: ":dev:javac-jdk8")
    testImplementation "net.wetheinter:gwt-dev:2.8.0"
    testImplementation "net.wetheinter:gwt-user:2.8.0"
    testImplementation "net.wetheinter:gwt-elemental:2.8.0"
    testImplementation "org.assertj:assertj-core-java8:1.0.0m1"
    api project(path: ":dev:javac-main")
}
// GenEnd XapiSettingsPlugin
// Done generating buildfile for :dev:javac at file://$rootDir/dev/javac/src/jdk8/javacJdk8.gradle
