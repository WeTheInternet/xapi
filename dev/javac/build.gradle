import net.wti.gradle.schema.api.Transitivity

buildscript {
    System.setProperty("xapiIntoBuildscipt", "true")
    project.extensions.add('myBuildscript', it)
    apply from: "$rootDir/gradle/xapi-env.gradle"
    dependencies {
        classpath "net.wti.gradle.tools:xapi-gradle-tools:$version"
    }
}
plugins {
    id 'xapi-require'
}


import org.gradle.internal.jvm.Jvm

xapiRequire.main().configure {
    req ->
        req.external "net.wti.core:xapi-fu:${->version}", 'main'
        req.external "net.wti.core:xapi-lang-core:${->version}", 'main'
        req.project 'xapi-io', 'jre:main'
        req.project 'xapi-core-parent:xapi-core-scope'
        req.project 'xapi-inject', 'jre:main'
        req.project 'xapi-dev-parent:xapi-dev-file'
        req.external Transitivity.compile_only, 'net.wetheinter:gwt-dev:2.8.0'
}

xapiRequire.module('test').configure {
    req ->
        req.external 'net.wetheinter:gwt-dev:2.8.0'
        req.external 'net.wetheinter:gwt-user:2.8.0'
        req.external 'net.wetheinter:gwt-elemental:2.8.0'
        req.project 'xapi-common', 'testTools'
        req.external 'org.assertj:assertj-core-java8:1.0.0m1'
        
}

dependencies {
    Jvm jvm = Jvm.current()
    if (jvm.javaVersion.isJava8()) {
        File tools = jvm.toolsJar
        if (tools) {
            compileOnly files(tools)
            testCompile files(tools)
        }
    } else {
        def view = xapiSchema.view
        view.projectGraph.platforms().configureEach({ plat ->
            plat.archives().configureEach({ arch ->
                if (arch.srcExists()) {
                    arch.tasks.javacTask.configure { javac->
                        // here is where we can set the per-archive-graph java 9+ module flags
                        // TODO, use / upgrade chainsaw plugin?
                    }
                }
            })
        })
    }


}

description = 'XApi - Java 8 compiler plugins'
