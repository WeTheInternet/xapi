import org.gradle.api.tasks.SourceSet;

ext.xapiModern = 'true'
// GenStart XapiSettingsPlugin

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
  repositories {
    maven {
      name = 'xapiLocal'
      url = repo
    }
  }
}
String javaPlugin = findProperty('xapi.java.plugin') ?: 'java-library'
plugins.apply javaPlugin
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/dev/maven-plugin/src/main/java")
main.resources.srcDir("$rootDir/dev/maven-plugin/src/main/resources")
test.java.srcDir("$rootDir/dev/maven-plugin/src/test/java")
test.resources.srcDir("$rootDir/dev/maven-plugin/src/test/resources")

dependencies {
  implementation project(path: ":collect-jre")
  implementation project(path: ":util-main")
  implementation project(path: ":dev:maven-main")
  implementation "org.apache.maven:maven-plugin-api:3.2.5"
  implementation "org.apache.maven.plugin-tools:maven-plugin-annotations:3.4"
  implementation "net.wetheinter:gwt-codeserver:2.8.0"
  implementation "net.wetheinter:gwt-dev:2.8.0"
  implementation "net.wetheinter:gwt-user:2.8.0"
  testImplementation "junit:junit:4.12"
}


configurations {
  mainOut
}
// GenEnd XapiSettingsPlugin
// Done generating buildfile for :dev:maven-plugin at file://$rootDir/dev/maven-plugin/generated-maven-plugin.gradle
