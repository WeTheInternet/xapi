tasks.withType(Test).configureEach {
    Test t ->
        t.maxHeapSize("4G")
        t.forkEvery(1)
        t.maxParallelForks(4)
}

tasks.named('jar', Jar).configure {
    Jar j ->
        j.archiveClassifier.set "default"
}
//import com.github.jengelman.gradle.plugins.shadow.internal.DependencyFilter
//import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

tasks.named("shadowJar").configure {
    jar ->
        jar.archiveClassifier.set(null)
        jar.zip64=true
        jar.minimize {
            filter ->
                filter.exclude {
                    ResolvedDependency res ->
                        if (res.moduleGroup =~ "(" +
                                "org.assert|" +
                                "junit|" +
                                "org.junit|" +
                                "org.hamcrest|" +
                                "javax.enterprise|" +
                                "javax.servlet|" +
                                "commons-coded|" +
                                "com.google.guava" +
                                ").*") {
                            return false
                        }
                        switch(res.moduleName) {
                            case "gwt-dev":
                            case "gwt-user":
                            case "elemental":
                                return false
                        }
//                        println ""
//                        println res.name
//                        println res.moduleName
                        return true
                }
        }
}
artifacts {
    archives shadowJar
}
assemble.dependsOn(shadowJar)