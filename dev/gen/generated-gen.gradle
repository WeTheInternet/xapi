import org.gradle.api.tasks.SourceSet;

ext.xapiModern = 'true'

plugins.apply "java-library"
// GenInclude XapiSettingsPlugin adding java-library b/c api dependencies used
// GenStart XapiSettingsPlugin

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
  repositories {
    maven {
      name = 'xapiLocal'
      url = repo
    }
  }
}
String javaPlugin = findProperty('xapi.java.plugin') ?: 'java-library'
plugins.apply javaPlugin
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/dev/gen/src/main/java")
main.resources.srcDir("$rootDir/dev/gen/src/main/resources")

dependencies {
  implementation project(path: ":inject-jre")
  implementation project(path: ":dev:lang-main")
  implementation project(path: ":io-main")
  implementation project(path: ":dev:javac-main")
  implementation project(path: ":dev:scanner-main")
  implementation "net.wti.core:xapi-lang-core:${->version}"
  api "net.wti.core:xapi-fu:$version"
  api "net.wti.core:xapi-lang-core:$version"
  testImplementation "junit:junit:4.12"
  testImplementation "org.assertj:assertj-core-java8:1.0.0m1"
}


configurations {
  mainOut
}
// GenEnd XapiSettingsPlugin
// Done generating buildfile for :dev:gen at file://$rootDir/dev/gen/generated-gen.gradle
