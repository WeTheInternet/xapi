plugins {
    id 'xapi-require'
    id 'groovy'
    id 'maven-publish'
    id 'xapi-publish'
}
String xapiHome = "$rootDir.parent"
apply from: "$xapiHome/gradle/xapi-env.gradle"

repositories {
    gradlePluginPortal()
    mavenCentral()
}


// force-realize a jar task for java-gradle-plugin to configure
xapiSchema.module('main', 'main').jarTask.get()
xapiSchema.whenReady {

    apply plugin: 'java-gradle-plugin'
    GradlePluginDevelopmentExtension plugin = extensions.getByName("gradlePlugin")
    plugin.publishComponent = '_main_main'
}

def module = project.dependencies.&create

def depend = { String key, Object item ->
    if (item instanceof Iterable) {
        for (Object i : item) {
            project.dependencies.add(key, i)
        }
    } else {
        project.dependencies.add(key, item)
    }
}

xapiRequire.main().configure {
    req ->
        req.external "net.wti.core:xapi-gen:$version", 'main'
        req.external "net.wti.core:xapi-fu:$version", 'main'
        req.external "net.wti.gradle.tools:xapi-gradle-tools:$version"//, 'main'
        req.project 'xapi-gradle-manifest', 'main'
        req.project 'xapi-gradle-loader', 'main'
}

xapiRequire.module('test').configure {
        external "net.wti.gradle.tools:xapi-gradle-test:$version", 'main'
        external 'junit:junit:4.12'
        external "org.spockframework:spock-core:1.2-groovy-2.5"
}

// we'll leave it up to scripts to decide which plugin/gradle/groovy version they want to use...
depend 'compileOnly', [
        project.dependencies.gradleApi(),
        module('com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'),
        module('org.jfrog.buildinfo:build-info-extractor-gradle:5.2.5'),
        module('com.github.jengelman.gradle.plugins:shadow:4.0.4')
//        module('com.gradleup.shadow:shadow-gradle-plugin:8.3.3')
]

dependencies {
    testImplementation gradleTestKit()
}

tasks.withType(Test).configureEach({
    Test t ->
        t.systemProperty 'xapi.home', xapiHome
        t.useJUnit()
})
