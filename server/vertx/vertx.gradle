import org.gradle.api.tasks.SourceSet;

plugins {
    id	"java-library"
    id	"maven-publish"
}
// GenStart net.wti.gradle.settings.plugin.XapiSettingsPlugin
ext.xapiModern = 'true'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
repositories.mavenCentral()
// setup sourcesets

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/server/vertx/src/main/java")
main.resources.srcDir("$rootDir/server/vertx/src/main/resources")
test.java.srcDir("$rootDir/server/vertx/src/test/java")
test.resources.srcDir("$rootDir/server/vertx/src/test/resources")

dependencies {
    implementation project(path: ":server:gen-main")
    implementation project(path: ":server:servlets")
    implementation project(path: ":gwtc-compiler")
    implementation project(path: ":gwtc-gwtCompiler")
    implementation project(path: ":io-main")
    implementation project(path: ":process-jre")
    implementation project(path: ":ui:service-main")
    implementation project(path: ":dev:maven-main")
    implementation project(path: ":dev:javac-main")
    testImplementation project(path: ":server:gen-sample")
    testImplementation project(path: ":dev:scanner-main")
    testImplementation project(path: ":server:gen-main")
    testImplementation project(path: ":dev:javac-main")
    implementation "net.wti.core:xapi-lang-core:${version}"
    implementation "io.vertx:vertx-web:3.5.3"
    implementation "io.vertx:vertx-hazelcast:3.5.3"
    implementation "io.vertx:vertx-auth-oauth2:3.5.3"
    testImplementation "info.cukes:cucumber-java:1.2.5"
    testImplementation "info.cukes:cucumber-junit:1.2.5"
}

repositories {
    maven {
        name = 'xapiLocal'
        url = "$rootDir/repo"
    }
}
// Setup publishing to coordinates: net.wetheinter:xapi-server-vertx
project.extensions.add('xapi.mvn.repo', "$rootDir/repo")
Task xapiPublish = tasks.create('xapiPublish')
xapiPublish.group = 'Publishing'
xapiPublish.description = 'Publish jars to xapiLocal repository'
xapiPublish.dependsOn "publishXapiPublicationToXapiLocalRepository"

PublishingExtension ext = extensions.findByName(PublishingExtension.NAME) as PublishingExtension
ext.repositories.maven {
    MavenArtifactRepository repo ->
        repo.name = 'xapiLocal'
        repo.url = "file://$rootDir/repo"
}
// not really what we want, but it's good enough for right now
java.withSourcesJar()
java.withJavadocJar()

ext.publications.create("xapi", MavenPublication, {
    pub ->
        afterEvaluate {
            if (tasks.names.contains('shadowJar')) {
                shadow.component(pub)
            } else {
                pub.from(components.named('java').get())
            }
        }
        pub.artifactId = "xapi-server-vertx"
        pub.groupId = "net.wetheinter"
})
// GenEnd net.wti.gradle.settings.plugin.XapiSettingsPlugin
// GenInclude body.end from file:///opt/xapi/server/vertx/src/gradle/main/body.end
tasks.named('test', Test).configure {
    Test t ->
        t.maxHeapSize = "1G"
}
// Done generating buildfile for :server:vertx at file://$rootDir/server/vertx/vertx.gradle
