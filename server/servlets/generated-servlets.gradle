import org.gradle.api.tasks.SourceSet;

ext.xapiModern = 'true'

plugins.apply "java-library"
// GenInclude XapiSettingsPlugin adding java-library b/c api dependencies used
// GenStart XapiSettingsPlugin

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
  repositories {
    maven {
      name = 'xapiLocal'
      url = repo
    }
  }
}
String javaPlugin = findProperty('xapi.java.plugin') ?: 'java-library'
plugins.apply javaPlugin
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/server/servlets/src/main/java")
main.resources.srcDir("$rootDir/server/servlets/src/main/resources")
test.java.srcDir("$rootDir/server/servlets/src/test/java")
test.resources.srcDir("$rootDir/server/servlets/src/test/resources")

dependencies {
  implementation project(path: ":dev:api-main")
  implementation project(path: ":process-main")
  implementation project(path: ":io-main")
  implementation project(path: ":util-main")
  implementation project(path: ":collect-main")
  implementation project(path: ":model-jre")
  implementation project(path: ":ui:service-main")
  api project(path: ":gwtc-api")
  testImplementation project(path: ":base-testTools")
  testImplementation project(path: ":dev:scanner-main")
  implementation "net.wti.core:xapi-lang-core:$version"
  implementation "net.wetheinter:gwt-user:2.8.0"
  compileOnly "javax.servlet:javax.servlet-api:3.1-b02"
  testImplementation "org.eclipse.jetty:jetty-server:9.2.14.v20151106"
  testImplementation "org.eclipse.jetty:jetty-servlet:9.2.14.v20151106"
}


configurations {
  mainOut
}
// GenEnd XapiSettingsPlugin
// Done generating buildfile for :server:servlets at file://$rootDir/server/servlets/generated-servlets.gradle
