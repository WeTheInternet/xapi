import org.gradle.api.tasks.SourceSet;

ext.xapiModern = 'true'
// GenStart XapiSettingsPlugin

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
  repositories {
    maven {
      name = 'xapiLocal'
      url = repo
    }
  }
}
String javaPlugin = findProperty('xapi.java.plugin') ?: 'java-library'
plugins.apply javaPlugin
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/samples/demo/src/main/java")
main.resources.srcDir("$rootDir/samples/demo/src/main/resources")

dependencies {
  implementation project(path: ":base-main")
  implementation project(path: ":dev:uber")
  implementation project(path: ":server:vertx")
  implementation project(path: ":dev:api-main")
  implementation project(path: ":gwt-gwtElemental2")
  implementation project(path: ":gwt-gwtComponents")
  implementation project(path: ":ui:javafx")
  implementation project(path: ":io-jre")
  testImplementation project(path: ":dev:scanner-main")
  implementation "junit:junit:4.13"
}


configurations {
  mainOut
}
// GenEnd XapiSettingsPlugin
// GenInclude body.end from file:///opt/xapi/samples/demo/src/gradle/main/body.end
repositories {
    maven {
        name = "wtiLocal"
        url = "$rootDir.parent/wti/repo"
    }
}

dependencies {
    implementation ("de.mocra.cy:wti-shared:0.5.1-SNAPSHOT") {
        exclude group: "net.wetheinter"
    }
}
main.java.srcDir("$rootDir/samples/demo/src/main/gen")
// Done generating buildfile for :samples:demo at file://$rootDir/samples/demo/generated-demo.gradle
