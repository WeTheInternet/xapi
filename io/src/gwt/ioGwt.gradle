import org.gradle.api.tasks.SourceSet;

plugins {
    id	"java-library"// GenInclude net.wti.gradle.settings.plugin.XapiSettingsPlugin adding java-library b/c api dependencies used
}
// GenStart net.wti.gradle.settings.plugin.XapiSettingsPlugin
ext.xapiModern = 'true'

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
    repositories {
        maven {
            name = 'xapiLocal'
            url = repo
        }
    }
}
plugins.apply 'java-library'
java.toolchain.languageVersion = JavaLanguageVersion.of(8)
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/io/src/gwt/java")
test.java.srcDir("$rootDir/io/src/gwtTest/java")
test.resources.srcDir("$rootDir/io/src/gwtTest/resources")

dependencies {
    implementation project(path: ":collect-gwt")
    implementation project(path: ":util-main")
    testImplementation project(path: ":util-main")
    testImplementation project(path: ":inject-main")
    testImplementation project(path: ":collect-main")
    implementation "net.wetheinter:jsinterop-annotations:2.8.0"
    implementation "net.wetheinter:gwt-user:2.8.0"
    testImplementation "net.sourceforge.htmlunit:htmlunit:2.19"
    testImplementation "junit:junit:4.13"
    testImplementation "net.wetheinter:gwt-user:2.8.0"
    testImplementation "net.wetheinter:gwt-codeserver:2.8.0"
    testImplementation "net.wetheinter:gwt-dev:2.8.0"
    api project(path: ":io-main")
    api project(path: ":io-gwtApi")
}

// Setup publishing to coordinates(net.wetheinter): net.wetheinter:xapi-io-gwt
// GenEnd net.wti.gradle.settings.plugin.XapiSettingsPlugin
// Done generating buildfile for :io at file://$rootDir/io/src/gwt/ioGwt.gradle
