import org.gradle.plugins.ide.idea.model.IdeaModel
import org.gradle.plugins.ide.idea.model.IdeaModule
import org.gradle.util.GFileUtils
import org.gradle.util.GUtil

// could make this configurable, but this is likely going away soon,
// since we'll want each custom sourceset to correct its own javac

tasks.withType(JavaCompile).all {
    JavaCompile javac ->

        String name = javac.name - 'compile' - 'Java'
        name = GUtil.toLowerCamelCase(name ?: 'main')

        // TODO: only run on a subset of blessed compile-type-from-name
        // (or, better yet, move this into plugin layer).

        File output = new File("$buildDir/generated/$name")
        groovy.lang.Closure<Set<File>> addSet = {
            to ->
                Set<File> copy = new LinkedHashSet<>(to)
                copy.add(output)
                copy
        }

        javac.options.annotationProcessorGeneratedSourcesDirectory = output

        IdeaModule ideaModule = project.getExtensions().getByType(IdeaModel).module
        if (name =~ /.*[Tt]est.*/) {
            ideaModule.testSourceDirs = addSet(ideaModule.testSourceDirs)
        } else {
            ideaModule.sourceDirs = addSet(ideaModule.sourceDirs)
        }
        ideaModule.generatedSourceDirs = addSet(ideaModule.generatedSourceDirs)

}
