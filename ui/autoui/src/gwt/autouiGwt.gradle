import org.gradle.api.tasks.SourceSet;

plugins {
    id	"java-library"
    id	"maven-publish"
}
// GenStart net.wti.gradle.settings.plugin.XapiSettingsPlugin
ext.xapiModern = 'true'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
repositories.mavenCentral()
// setup sourcesets

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/ui/autoui/src/gwt/java")
main.resources.srcDir("$rootDir/ui/autoui/src/gwt/resources")
test.java.srcDir("$rootDir/ui/autoui/src/gwtTest/java")
test.resources.srcDir("$rootDir/ui/autoui/src/gwtTest/resources")

dependencies {
    implementation project(path: ":collect-main")
    implementation project(path: ":ui:service-main")
    implementation project(path: ":util-main")
    implementation project(path: ":core:event")
    implementation project(path: ":ui:autoui-main")
    implementation project(path: ":ui:html-main")
    implementation project(path: ":model-gwt")
    implementation project(path: ":inject-jre")
    testImplementation project(path: ":ui:autoui-sample")
    testImplementation project(path: ":base-gwtTestTools")
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    compileOnly "net.wetheinter:gwt-dev:2.8.0"
    compileOnly "net.wetheinter:gwt-user:2.8.0"
    testImplementation "net.wetheinter:gwt-dev:2.8.0"
    testImplementation "net.wetheinter:gwt-user:2.8.0"
    testImplementation "net.wetheinter:gwt-codeserver:2.8.0"
    testImplementation "net.sourceforge.htmlunit:htmlunit:2.19"
    api project(path: ":ui:autoui-main")
    api project(":ui:autoui-gwt-sources")
}

repositories {
    maven {
        name = 'xapiLocal'
        url = "$rootDir/repo"
    }
}
// Setup publishing to coordinates: net.wetheinter:xapi-ui-autoui-gwt
project.extensions.add('xapi.mvn.repo', "$rootDir/repo")
Task xapiPublish = tasks.create('xapiPublish')
xapiPublish.group = 'Publishing'
xapiPublish.description = 'Publish jars to xapiLocal repository'
xapiPublish.dependsOn "publishXapiPublicationToXapiLocalRepository"

PublishingExtension ext = extensions.findByName(PublishingExtension.NAME) as PublishingExtension
ext.repositories.maven {
    MavenArtifactRepository repo ->
        repo.name = 'xapiLocal'
        repo.url = "file://$rootDir/repo"
}
// not really what we want, but it's good enough for right now
java.withSourcesJar()
java.withJavadocJar()

ext.publications.create("xapi", MavenPublication, {
    pub ->
        afterEvaluate {
            if (tasks.names.contains('shadowJar')) {
                shadow.component(pub)
            } else {
                pub.from(components.named('java').get())
            }
        }
        pub.artifactId = "xapi-ui-autoui-gwt"
        pub.groupId = "net.wetheinter"
})
// GenEnd net.wti.gradle.settings.plugin.XapiSettingsPlugin
// GenInclude body.end from file:///opt/xapi/ui/autoui/src/gradle/gwt/body.end
tasks.withType(Test).configureEach {
    Test t ->
        if (gradle.gradleVersion.startsWith("5")) {
            t.logging.level = LogLevel.INFO
        } else {
            t.logging.levelInternal = LogLevel.INFO
        }
        t.forkEvery = 1
        t.maxHeapSize = "2G"
        t.timeout = Duration.ofMinutes(10)
        // t.systemProperty("gwt.args", "-logLevel TRACE -noincremental  -ea -userAgents safari -runStyle Manual -style PRETTY -gen $buildDir/www-test/gen -nodevMode -war $buildDir/www-test ")
        t.systemProperty("gwt.args", "-logLevel DEBUG -noincremental  -ea -userAgents gecko1_8 -runStyle HtmlUnit -nodevMode -war $buildDir/www-gwtTest ")
}
// Done generating buildfile for :ui:autoui at file://$rootDir/ui/autoui/src/gwt/autouiGwt.gradle
