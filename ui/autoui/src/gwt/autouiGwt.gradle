import org.gradle.api.tasks.SourceSet;

plugins {
    id	"java-library"// GenInclude XapiSettingsPlugin adding java-library b/c api dependencies used
}
// GenStart XapiSettingsPlugin
ext.xapiModern = 'true'

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
    repositories {
        maven {
            name = 'xapiLocal'
            url = repo
        }
    }
}
plugins.apply 'java-library'
java.toolchain.languageVersion = JavaLanguageVersion.of(8)
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/ui/autoui/src/gwt/java")
main.resources.srcDir("$rootDir/ui/autoui/src/gwt/resources")
test.java.srcDir("$rootDir/ui/autoui/src/gwtTest/java")
test.resources.srcDir("$rootDir/ui/autoui/src/gwtTest/resources")

dependencies {
    implementation project(path: ":collect-main")
    implementation project(path: ":ui:service-main")
    implementation project(path: ":util-main")
    implementation project(path: ":core:event-main")
    implementation project(path: ":ui:autoui-main")
    implementation project(path: ":ui:html-main")
    implementation project(path: ":model-gwt")
    implementation project(path: ":inject-jre")
    testImplementation project(path: ":ui:autoui-sample")
    testImplementation project(path: ":base-gwtTestTools")
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    compileOnly "net.wetheinter:gwt-dev:2.8.0"
    compileOnly "net.wetheinter:gwt-user:2.8.0"
    testImplementation "net.wetheinter:gwt-dev:2.8.0"
    testImplementation "net.wetheinter:gwt-user:2.8.0"
    testImplementation "net.wetheinter:gwt-codeserver:2.8.0"
    testImplementation "net.sourceforge.htmlunit:htmlunit:2.19"
    api project(path: ":ui:autoui-main")
}

// GenEnd XapiSettingsPlugin
// GenInclude body.end from file:///opt/xapi/ui/autoui/src/gradle/gwt/body.end
tasks.withType(Test).configureEach {
    Test t ->
        if (gradle.gradleVersion.startsWith("5")) {
            t.logging.level = LogLevel.INFO
        } else {
            t.logging.levelInternal = LogLevel.INFO
        }
        t.forkEvery = 1
        t.maxHeapSize = "2G"
        t.timeout = Duration.ofMinutes(10)
        // t.systemProperty("gwt.args", "-logLevel TRACE -noincremental  -ea -userAgents safari -runStyle Manual -style PRETTY -gen $buildDir/www-test/gen -nodevMode -war $buildDir/www-test ")
        t.systemProperty("gwt.args", "-logLevel DEBUG -noincremental  -ea -userAgents gecko1_8 -runStyle HtmlUnit -nodevMode -war $buildDir/www-gwtTest ")
}
// Done generating buildfile for :ui:autoui at file://$rootDir/ui/autoui/src/gwt/autouiGwt.gradle
