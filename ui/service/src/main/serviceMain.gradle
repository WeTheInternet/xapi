plugins {
    id	"java-library"
    id	"maven-publish"
}
// GenStart net.wti.gradle.settings.plugin.XapiSettingsPlugin
ext.xapiModern = 'true'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
repositories.mavenCentral()
// setup sourcesets

SourceSet main = sourceSets.maybeCreate('main');

SourceSet test = sourceSets.maybeCreate('test');
main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/ui/service/src/main/java")
main.resources.srcDir("$rootDir/ui/service/src/main/resources")
test.java.srcDir("$rootDir/ui/service/src/test/java")
test.resources.srcDir("$rootDir/ui/service/src/test/resources")

dependencies {
    annotationProcessor project(path: ":base-api")
    api project(path: ":ui:api")
    api project(path: ":dev:lang-main")
    implementation project(path: ":dev:file-main")
    implementation project(path: ":core:scope")
    implementation project(path: ":io-main")
    implementation project(path: ":util-main")
    api project(path: ":core:event")
    api project(path: ":model-main")
    api project(path: ":collect-main")
    api project(path: ":inject-main")
    implementation project(path: ":dev:scanner-main")
    testImplementation project(path: ":model-jre")
    testImplementation project(path: ":base-testTools")
    implementation "javax.validation:validation-api:1.0.0.GA"
    compileOnly "net.wetheinter:jsinterop-annotations:2.8.0"
    testImplementation "junit:junit:4.12"
    testImplementation "org.assertj:assertj-core:3.2.0"
}

repositories {
    maven {
        name = 'xapiLocal'
        url = "$rootDir/repo"
    }
}
// Setup publishing to coordinates: net.wetheinter:xapi-ui-service
project.extensions.add('xapi.mvn.repo', "$rootDir/repo")
Task xapiPublish = tasks.create('xapiPublish')
xapiPublish.group = 'Publishing'
xapiPublish.description = 'Publish jars to xapiLocal repository'
xapiPublish.dependsOn "publishXapiPublicationToXapiLocalRepository"

PublishingExtension ext = extensions.findByName(PublishingExtension.NAME) as PublishingExtension
ext.repositories.maven {
    MavenArtifactRepository repo ->
        repo.name = 'xapiLocal'
        repo.url = "file://$rootDir/repo"
}
// not really what we want, but it's good enough for right now
java.withSourcesJar()
java.withJavadocJar()

ext.publications.create("xapi", MavenPublication, {
    pub ->
        afterEvaluate {
            if (tasks.names.contains('shadowJar')) {
                shadow.component(pub)
            } else {
                pub.from(components.named('java').get())
            }
        }
        pub.artifactId = "xapi-ui-service"
        pub.groupId = "net.wetheinter"
})
// GenEnd net.wti.gradle.settings.plugin.XapiSettingsPlugin
// Done generating buildfile for :ui:service at file://$rootDir/ui/service/src/main/serviceMain.gradle
