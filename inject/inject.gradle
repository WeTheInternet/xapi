import net.wti.gradle.internal.require.api.Requirable
import net.wti.gradle.schema.api.Transitivity

buildscript({
    dependencies {
        classpath 'net.wti.gradle.tools:xapi-gradle-tools:0.5.1'
    }
})
plugins { id 'xapi-require' }
evaluationDependsOn(':xapi-collect')

String v = version

xapiRequire.module('api').configure {
    Requirable req ->
        req.external "net.wti.core:xapi-fu:$v", 'main'
        req.project 'xapi-common', 'spi' // for some terribly reason, if we move this down, it will break.
        // specifically, it seems like we can only inherit a single configuration from any given project (firstSeenDependency)
        req.project 'xapi-common', 'api'
}

xapiRequire.module('spi').configure {
    Requirable req ->
        req.external "net.wti.core:xapi-fu:$v", 'main'
        req.project 'xapi-common', 'api'
        req.project 'xapi-collect', 'api'
}
xapiRequire.main().configure {
    Requirable req ->
        req.project 'xapi-log', 'main'
}
xapiRequire.main('gwt').configure {
    Requirable req ->
        req.project 'xapi-log', 'main'
        req.project 'xapi-common', 'gwt:main'
        req.project 'xapi-dev-parent:xapi-dev-source', 'main:main'
}

xapiRequire.main('jre').configure {
    Requirable req ->
        req.project 'xapi-dev-parent:xapi-dev-scanner', 'main'
}

xapiRequire.module('jre', 'test').configure {
    Requirable req ->
        req.project 'xapi-common', 'testTools'
        req.project Transitivity.runtime, 'xapi-model', 'jre:main'
}

xapiSchema.whenReady {
    project.dependencies {
        gwtCompileOnly 'net.wetheinter:gwt-dev:2.8.0'
        gwtCompileOnly 'net.wetheinter:gwt-user:2.8.0'

        jreAnnotationProcessor configurations.exportCompile
    }
}
