import org.gradle.api.tasks.SourceSet;

ext.xapiModern = 'true'
// GenStart XapiSettingsPlugin

apply from: "$rootDir/gradle/xapi-modern.gradle"
String repo = project.findProperty("xapi.mvn.repo")
if (repo) {
  repositories {
    maven {
      name = 'xapiLocal'
      url = repo
    }
  }
}
String javaPlugin = findProperty('xapi.java.plugin') ?: 'java-library'
plugins.apply javaPlugin
repositories.mavenCentral()

SourceSet main = sourceSets.maybeCreate('main');


SourceSet test = sourceSets.maybeCreate('test');

main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/core/reflect/src/main/java")
main.resources.srcDir("$rootDir/core/reflect/src/main/resources")

dependencies {
  implementation project(path: ":base-main")
  implementation "net.wti.core:xapi-fu:$version"
  implementation "net.wti.core:xapi-gen:$version"
  implementation "javax.inject:javax.inject:1"
  implementation "junit:junit:4.12"
}
// GenEnd XapiSettingsPlugin
// GenInclude body.end from file:///opt/xapi/core/reflect/src/gradle/main/body.end
SourceSet java9 = sourceSets.maybeCreate("java9")

if (JavaVersion.current().isJava9Compatible()) {
    java9.java.srcDir("src/main/java9")
    dependencies.add(java9.compileOnlyConfigurationName, project.files(java.runtimeClasspath))
    dependencies.add(java9.compileOnlyConfigurationName, project.files(java.compileClasspath))
    gradle.projectsEvaluated {
        tasks.named('jar', Jar).configure({ jar ->
            jar.manifest.attributes['Multi-Release'] = 'true'
            jar.into("META-INF/versions/9") {
                CopySpec c ->
                    c.from(java9.output)
            }
            jar.into("META-INF/versions/11") {
                CopySpec c ->
                    c.from(java9.output)
            }
        })
    }
} else {
    tasks.named(java9.compileJavaTaskName).configure({Task javac ->
        javac.enabled(false)
    })
//    logger.info "Java9 classes directories: {}", java9.output.classesDirs.asPath
    if (java9.output.classesDirs.any { File d -> d.directory }) {
        gradle.projectsEvaluated {
            tasks.named('jar', Jar).configure({ jar ->
                jar.manifest.attributes['Multi-Release'] = 'true'
                jar.into("META-INF/versions/9") {
                    CopySpec c ->
                        c.from(java9.output.classesDirs)
                }
                jar.into("META-INF/versions/11") {
                    CopySpec c ->
                        c.from(java9.output.classesDirs)
                }
            })
        }
    }
}

// Done generating buildfile for :core:reflect at file://$rootDir/core/reflect/src/main/generated-reflectMain.gradle
