<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.wetheinter</groupId>
    <artifactId>xapi-core-parent</artifactId>
    <version>0.5.1-SNAPSHOT</version>
  </parent>

  <artifactId>xapi-core-reflect</artifactId>
  <packaging>jar</packaging>
  <name>XApi - Core reflection apis and interfaces</name>
  <url>WeTheInter.net</url>
  <description>
  All of our modules, somewhere along the way, use reflective structures
  wrapping java objects from various apis.
  Gwt uses JDT AST, Jre uses actual reflection, and our injection library uses
  a bytecode scanner to read in .class files.
  In order to abstract over the various apis we wrap,
  we have our own interface layer to describe java metadata,
  so we can create tools to utilize java structure
  independent of any given dependencies.
  </description>

  <dependencies>
    <dependency>
      <groupId>net.wetheinter</groupId>
      <artifactId>xapi-core-api</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
