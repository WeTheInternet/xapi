<generate
    n = [1, 2, 3, 4, 5]
    loop = {
      from : 1,
      to   : 5,
      var  : "n",
      tasks : {
        generateInterface : {
          name : `In$n`
          typeParams : $range(1, $n, $n->`I$n`),
          extend : [
            HasInput.class,
            Rethrowable.class,
            Lambda.class
          ],
          methods : method(void.class, `in$n`, $range(1, $n, $n -> `I$n in$n`)),
          defaultMethods : [
            {
                from: 1,
                to: $n,
                var: "s",
                tasks: {
                    name : `map$s`,
                    typeParams : "To",
                    returns : $type(`In$n`,
                        $range(1, $n, $n->`I$n`)
                        .$replace(`I$s`, "To")),
                    params : {
                        mapper : In1Out1.class.$generic("To", `I$s`)
                    },
                    body : ( `return (` +
                        $range(1, $n, $i->( $i == 1 ? "" : ", ") + `i$i`) +
                        `) -> in(` +
                        $range(1, $n, $i ->
                        ( $i == 1 ? "" : ", ") +
                        ( ( $i == $s ) ? `mapper.io(i$i)` : `i$i` )
                        ) +
                        `);`
                    )
                }
            }
          ],
          staticMethods : [
          ]
        }
      }
    }
/>
